# Install ckanext-harvest
#
# Note: Requires CKAN to be properly configured
#

---
- hosts: webserver
  vars:
    virtualenv: default
  tasks:
    - name: Make sure packages are installed
      apt: pkg={{ item }} state=installed update_cache=yes
      with_items:
        - redis-server
        - supervisor
        - git
        - python-virtualenv

    - name: Get harvest extension
      git: repo=https://github.com/okfn/ckanext-harvest dest=/usr/lib/ckan/{{ virtualenv }}/src/ckanext-harvest version=stable

    - name: Run setup.py develop for harvest
      command: chdir=/usr/lib/ckan/{{ virtualenv }}/src/ckanext-harvest/ ../../bin/python setup.py develop

    - name: Install requirements for harvest
      pip: requirements=/usr/lib/ckan/{{ virtualenv }}/src/ckanext-harvest/pip-requirements.txt virtualenv=/usr/lib/ckan/{{ virtualenv }}

    - name: Install python redis client
      pip: name=redis version=2.8.0 virtualenv=/usr/lib/ckan/{{ virtualenv }}

    - name: Copy all needed files
      template: src={{ item }} dest=/{{ item }} backup=yes owner=root group=root
      with_items:
        - etc/supervisor/conf.d/ckan-harvest.conf
        - etc/cron.d/ckan-harvest
        - etc/init/supervisor.conf

    - name: Add harvest and ckan_harvester plugins to the ini file
      lineinfile: dest=/etc/ckan/{{ virtualenv }}/production.ini
                         backup=yes
                         backrefs=yes
                         state=present
                         regexp='ckan.plugins\s?=(.*)'
                         line='ckan.plugins =\1 harvest ckan_harvester'

    - name: Add Redis backend option to the ini file
      lineinfile: dest=/etc/ckan/{{ virtualenv }}/production.ini
                         backup=yes
                         state=present
                         regexp='^ckan.harvest.mq.type=redis'
                         line='ckan.harvest.mq.type=redis'
                         insertafter='ckan.plugins(.*)\n'

    - name: Restart Redis
      service: name=redis-server state=reloaded

    - name: Restart Supervisor
      service: name=supervisor state=reloaded
